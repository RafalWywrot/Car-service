@model CarService.WebApplication.Models.Car.CarFormViewModel

@{
    ViewBag.Title = Resource.AddCarTitle;
}

<h2>@Resource.AddCarTitle</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.CarBrandId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CarBrandId, Model.CarBrands, new { @id = "carBrandDropdown", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CarBrandId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CarModelId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CarModelId, Model.CarModels, new { @id = "carModelDropdown", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CarModelId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EngineCapacity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EngineCapacity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EngineCapacity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TransmissionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TransmissionId, Model.TransmissionOptions, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TransmissionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Odometer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Odometer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Odometer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FuelTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FuelTypeId, Model.FuelOptions, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FuelTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnginePower, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnginePower, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EnginePower, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Resource.ButtonSave" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(Resource.ButtonBack, "Index", null, new { @class = "btn btn-default" })
</div>


@section Scripts
{
    <script>
        (function ($) {
            var url = '@Url.Action("GetModels", "Car")';
            var carModelDDL = $('#carModelDropdown')
            $('#carBrandDropdown').change(function (e) {
                var id = $(this).val(); // Use $(this) so you don't traverse the DOM again
                $.getJSON(url, { brandId: id }, function (response) {
                    carModelDDL.empty(); // remove any existing options
                    $.each(response, function (index, item) {
                        carModelDDL.append($('<option></option>').text(item.Text).val(item.Value));
                    });
                }).done(function () {
                    carModelDDL.find('option:first').prop('selected', true);
                });
            });
        })(jQuery);
    </script>
}