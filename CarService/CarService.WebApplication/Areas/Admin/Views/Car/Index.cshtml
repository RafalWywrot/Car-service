@model IEnumerable<CarService.WebApplication.Areas.Admin.Models.CarManagementSummaryViewModel>
@section Styles{
    @Styles.Render("~/Content/dataTables")
}
@{
    ViewBag.Title = Resource.Cars;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Resource.Cars</h2>

<p>
    @Html.ActionLink("Dodaj nową markę", "Add")
</p>
<div class="row">
    <div class="col-md-6">
        <table id="car-management" class="table hover text-center display" style="width:100%">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.CarModelName)</th>*@
                    <th></th>
                    <th>Modele</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.CarBrandName) 
                            @Html.ActionLink("Edytuj nazwę", "Update", new { @carBrandId = item.CarBrandId }, new { @class = "btn btn-sm btn-default" }) 
                            @Html.ActionLink("Dodaj model", "AddNewModel", new { carBrandId = item.CarBrandId }, new { @class = "btn btn-sm btn-default" })</td>
                        @if (string.IsNullOrEmpty(item.CarModelName))
                        {
                            <td>@Html.DisplayName("Brak modeli")</td>
                            <td>
                            </td>
                        }
                        else
                        {
                            <td>@Html.DisplayFor(modelItem => item.CarModelName)</td>
                            <td>
                                @Html.ActionLink("Edytuj", "UpdateModel", new { carModelId = item.CarModelId }, new { @class = "btn btn-sm btn-default" }) |
                                @Html.ActionLink("Usuń", "Delete", new { /* id=item.PrimaryKey */ }, new { @class = "btn btn-sm btn-default" })
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@section Scripts
{
    @Scripts.Render("~/bundles/dataTables")
    <script>
            (function ($) {
                var brandName = 0;
                var modelName = 1;
                $("#car-management").DataTable({
                    "language": {
                        "url": "/Scripts/DataTable/polishTranslation.json"
                    },
                    "paging": false,
                    "searching": false,
                    "columnDefs": [
                        {
                            "targets": brandName,
                            "visible": false
                        },
                        {
                            targets: -1,
                            'orderable': false
                        }
                    ],
                    "order": [[brandName, 'asc'], [modelName, 'asc']],
                    "orderFixed": [[brandName, 'asc']],
                    "drawCallback": function (settings) {
                        var api = this.api();
                        var rows = api.rows({ page: 'current' }).nodes();
                        var last = null;

                        api.column(brandName, { page: 'current' }).data().each(function (group, i) {
                            if (last !== group) {
                                $(rows).eq(i).before(
                                    '<tr class="group text-left"><td colspan="7">' + group + '</td></tr>'
                                );
                                last = group;
                            }
                        });
                    }
                });
            })(jQuery);
    </script>
}